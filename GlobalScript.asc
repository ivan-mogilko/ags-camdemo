// main global script file

#define GAME_VERSION_STRING "v1.0.0 (July 2021)"

// called when the game starts, before the first room is loaded
function game_start() 
{
	Game.NormalFont = eFontFont4;
	SetGameSpeed(60);

	KeyboardMovement.Mode = eKeyboardMovementModeNone;

	lblFootnote.Text = GAME_VERSION_STRING;
	lblCredits.Text = "Game and script by Ivan Mogilko\nmade in 2020-2021\n\nArt:\nRoom 1: Blondbraid\nRoom 2: lorenzo\nRoom 3 and 4: Alan v.Drake";
}

// called on every game cycle, except when the game is blocked
function repeatedly_execute() 
{
}

// called on every game cycle, even when the game is blocked
function repeatedly_execute_always() 
{
}

// called after game update but before it's drawn
function late_repeatedly_execute_always()
{
}

// called when a key is pressed
function on_key_press(eKeyCode keycode) 
{
	if (keycode == eKeyEscape) {
		if (player.Room != 301) { // not in main menu
			gGameMenu.Visible = !gGameMenu.Visible;
		}
	} if (keycode == eKeyF12) {
		SaveScreenShot("screenshot.bmp");
	}
}

// called when a mouse button is clicked
function on_mouse_click(MouseButton button)
{
	// Generic controls (work unless overridden by the room script):
	// LMB - interact with the room,
	// LMB on inventory item - interact with the item
	if (button == eMouseLeft || button == eMouseRight) {
		Room.ProcessClick(mouse.x, mouse.y, eModeInteract);
	} else if (button == eMouseLeftInv || button == eMouseRightInv) {
		inventory[game.inv_activated].RunInteraction(eModeInteract);
	}
}

function on_event(EventType event, int data)
{
	// For each room, show menu button in the screen corner,
	// and hide it when leaving, just in case
	if (event == eEventEnterRoomBeforeFadein) {
		if (player.Room != 301) {
			gMenuButton.Visible = true;
		}
	} else if (event == eEventLeaveRoom) {
		gMenuButton.Visible = false;
	}
}

function dialog_request(int param) {
}

function btnShowGM_OnClick(GUIControl *control, MouseButton button)
{
	gGameMenu.Visible = true;
}

function btnGMResume_OnClick(GUIControl *control, MouseButton button)
{
	gGameMenu.Visible = false;
}

function btnGMRestartRoom_OnClick(GUIControl *control, MouseButton button)
{
	gGameMenu.Visible = false;
	player.ChangeRoom(player.Room);
}

function btnGMRestartGame_OnClick(GUIControl *control, MouseButton button)
{
		gGameMenu.Visible = false;
		player.ChangeRoom(301);
}

function btnGMQuit_OnClick(GUIControl *control, MouseButton button)
{
	QuitGame(0);
}

// Toggle credits page on/off
void OnCredits_OnOff()
{
	lblCredits.Visible = !lblCredits.Visible;
	
	if (lblCredits.Visible) {
		btnMMRoom1.Visible = false;
		btnMMRoom2.Visible = false;
		btnMMRoom3.Visible = false;
		btnMMRoom4.Visible = false;
		btnMMQuit.Visible = false;
		btnMMCredits.Visible = false;
		btnMMBack.Visible = true;
	} else {
		btnMMRoom1.Visible = true;
		btnMMRoom2.Visible = true;
		btnMMRoom3.Visible = true;
		btnMMRoom4.Visible = true;
		btnMMQuit.Visible = true;
		btnMMCredits.Visible = true;
		btnMMBack.Visible = false;
	}
}

function btnMMCredits_OnClick(GUIControl *control, MouseButton button)
{
	OnCredits_OnOff();
}

function btnMMBack_OnClick(GUIControl *control, MouseButton button)
{
	OnCredits_OnOff();
}

function btnMMRoom1_OnClick(GUIControl *control, MouseButton button)
{
	player.ChangeRoom(400);
}

function btnMMRoom2_OnClick(GUIControl *control, MouseButton button)
{
	player.ChangeRoom(401);
}

function btnMMRoom3_OnClick(GUIControl *control, MouseButton button)
{
	player.ChangeRoom(402);
}

function btnMMRoom4_OnClick(GUIControl *control, MouseButton button)
{
    player.ChangeRoom(403);
}

function i400Mirror_Interact()
{
	CallRoomScript(ROOM_EVENT__ITEM_USED);
}

function i400Key_Interact()
{
	CallRoomScript(ROOM_EVENT__ITEM_USED);
}
